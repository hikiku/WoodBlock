

// TODO: rename "name" or "description" to Identifier

// TODO: Double-byte character strings: WSTRING
// TODO: Generic data types: ANY_...
        // ANY g)
            // ANY_DERIVED
            // ANY_ELEMENTARY
                // ANY_MAGNITUDE
                    // ANY_NUM
                        // ANY_REAL h) REAL, LREAL
                            // ANY_INT
                                // ANY_UNSIGNED USINT, UINT, UDINT, ULINT
                                // ANY_SIGNED SINT, INT, DINT, LINT
                    // ANY_DURATION TIME, LTIME
                // ANY_BIT BOOL, BYTE, WORD, DWORD, LWORD
                // ANY_CHARS
                    // ANY_STRING STRING, WSTRING       : array<width, length>
                // ANY_CHAR CHAR, WCHAR
                // ANY_DATE DATE_AND_TIME, LDT, DATE, TIME_OF_DAY, LTOD
// TODO: Derived data types: ARRAY, RANGE, ENUM, STRUCT
        // enum T.  template <class T> class ENUM : public ANY_DERIVED {}
        // struct T. template <class T> class STRUCT : public ANY_DERIVED {}
        // template<class T, lower_limits, upper_limits> class SUBRANGE : public ANY_DERIVED {}
        // template<class T, lower_index, upper_index> class ARRAY : public ANY_DERIVED {}
// TODO: check data type of connection

// TODO: Lookup Event / Feedback Event!

// TODO: genenral template function block
// TODO: Auto generate some Graphs: Application Top / FB Sequence
// TODO: (Local / Remote) Test Functon Block: Driver & Discarder

// Test Case:
// FunctionBlock interface: 
//      1. A event input/output with 0 input/output variables;
//      2. A event input/output with 1 input/output variable;
//      3. A event input/output with 2 input/output variables;
//      4. A event input/output with 3 input/output variables;

//      5. A input/output variable related to 0 event input/output;
//      6. A input/output variable related to 1 event input/output;
//      7. A input/output variable related to 2 event2 input/output;
//      8. A input/output variable related to 3 event3 input/output;
